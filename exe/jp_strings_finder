#!/usr/bin/env ruby

require "colorize"
require "jp_strings_finder"

def find_in_file(file_path)
  file_path = File.expand_path(file_path)
  begin
    strings = JpStringsFinder.find_in(file_path)
  rescue => e
    STDERR.puts e.message.colorize(:red)
    return
  end

  unless strings.empty?
    {
      file: file_path,
      type: JpStringsFinder::FiletypeDetector.new(file_path).filetype, #TODO: directly access to inner class is not preffered
      strings: strings
    }
  end
end

def find_in_directory(dir_path)
  dir_path = File.expand_path(dir_path)
  results = []
  Dir.glob(File.join(dir_path, "/**/*")) do |file_path|
    next if File.directory?(file_path)
    results << find_in_file(file_path)
  end
  results
end

path = ARGV[0]

results =
  if File.directory?(path)
    find_in_directory(path).compact
  elsif File.file?(path)
    [find_in_file(path)].compact
  else
    raise "[#{path}] is not found"
  end

if results.empty?
  STDERR.puts "Yay! There is no Japanese string exists in your app codes!".colorize(:green)
  exit 0
else
  JpStringsFinder::Printer.new(results.compact).print_table
  exit 1
end
